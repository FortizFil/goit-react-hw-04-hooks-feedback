{"version":3,"sources":["components/feedback.module.css","components/statistics.jsx","components/FeedbackOptions.jsx","components/section.jsx","components/notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","className","s","button__container","map","button","type","onClick","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","FeedbackPercentage","Math","round","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,OAAS,2B,wICuBZC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,EAAV,OACA,mDACqBC,EAAqB,EAAIA,EAAqB,EADnE,Y,gBCmBSC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAUC,OAAOC,KAAKJ,GAC5B,OACE,qBAAKK,UAAWC,IAAEC,kBAAlB,SACGL,EAAQM,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEG,OACbC,KAAK,SACLC,QAAS,WACPV,EAAgBQ,IAJpB,SAQGA,GAFIA,SCEAG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCkDEC,G,MA9CH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAiBMC,EAAqB,kBAAM5B,EAAOC,EAAUC,GAC5CC,EAAQyB,IAERC,EADwCC,KAAKC,MAAO/B,EAAO4B,IAAwB,KAEzF,OACE,qCACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBb,QAAS,CAAEN,OAAMC,UAASC,OAAOK,gBAtBvC,SAAAyB,GACf,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAb,GAAC,OAAIA,EAAI,KACjB,MACF,IAAK,UACHc,GAAW,SAAAd,GAAC,OAAIA,EAAI,KACpB,MACF,IAAK,MACHe,GAAO,SAAAf,GAAC,OAAIA,EAAI,KAChB,MACF,QACE,aAYF,cAAC,EAAD,CAASO,MAAM,YAAf,SACGhB,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoByB,IAGtB,cAAC,EAAD,CAAcP,QAAQ,6BCxChCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.837a04f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedback_button__3L_he\"};","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total:{total} </p>\r\n      <p>\r\n        Positive Feedback:{positivePercentage > 0 ? positivePercentage : 0} %\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const buttons = Object.keys(options);\r\n  return (\r\n    <div className={s.button__container}>\r\n      {buttons.map(button => (\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            onLeaveFeedback(button);\r\n          }}\r\n          key={button}\r\n        >\r\n          {button}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport Statistics from './components/statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/section';\nimport Notification from './components/notification';\nimport './App.css';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onButton = name => {\n    switch (name) {\n      case 'good':\n        setGood(s => s + 1);\n        break;\n      case 'neutral':\n        setNeutral(s => s + 1);\n        break;\n      case 'bad':\n        setBad(s => s + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => good + neutral + bad;\n  const total = countTotalFeedback();\n  const countPositiveFeedbackPercentage = () => Math.round((good / countTotalFeedback()) * 100);\n  const FeedbackPercentage = countPositiveFeedbackPercentage();\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={{ good, neutral, bad }} onLeaveFeedback={onButton} />\n      </Section>\n      <Section title=\"Statistic\">\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={FeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}